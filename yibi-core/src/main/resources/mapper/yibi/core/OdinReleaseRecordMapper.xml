<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yibi.core.dao.OdinReleaseRecordMapper">
  <resultMap id="BaseResultMap" type="com.yibi.core.entity.OdinReleaseRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="coin_type" jdbcType="INTEGER" property="coinType" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, coin_type, amount, create_time
  </sql>
  <insert id="insert" parameterType="com.yibi.core.entity.OdinReleaseRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into odin_release_record (user_id, coin_type, amount, 
      create_time)
    values (#{userId,jdbcType=INTEGER}, #{coinType,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yibi.core.entity.OdinReleaseRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into odin_release_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="coinType != null">
        coin_type,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="coinType != null">
        #{coinType,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.yibi.core.entity.OdinReleaseRecord">
    update odin_release_record
    set user_id = #{userId,jdbcType=INTEGER},
      coin_type = #{coinType,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yibi.core.entity.OdinReleaseRecord">
    update odin_release_record
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="coinType != null">
        coin_type = #{coinType,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from odin_release_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from odin_release_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" parameterType="java.util.Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from odin_release_record
    where 1=1 
    <if test="userId != null">
       and  user_id = #{userId,jdbcType=INTEGER}
    </if>
    <if test="coinType != null">
       and  coin_type = #{coinType,jdbcType=INTEGER}
    </if>
    <if test="amount != null">
       and  amount = #{amount,jdbcType=DECIMAL}
    </if>
    <if test="createTime != null">
       and  create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
     order by id desc 
  </select>
  <select id="selectPaging" parameterType="java.util.Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from odin_release_record
    where 1=1 
    <if test="userId != null">
       and  user_id = #{userId,jdbcType=INTEGER}
    </if>
    <if test="coinType != null">
       and  coin_type = #{coinType,jdbcType=INTEGER}
    </if>
    <if test="amount != null">
       and  amount = #{amount,jdbcType=DECIMAL}
    </if>
    <if test="createTime != null">
       and  create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
     order by id desc limit #{firstResult,jdbcType=INTEGER},#{maxResult,jdbcType=INTEGER}
  </select>
  <select id="selectCount" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(*) 
    from odin_release_record 
    where 1=1 
    <if test="userId != null">
       and  user_id = #{userId,jdbcType=INTEGER}
    </if>
    <if test="coinType != null">
       and  coin_type = #{coinType,jdbcType=INTEGER}
    </if>
    <if test="amount != null">
       and  amount = #{amount,jdbcType=DECIMAL}
    </if>
    <if test="createTime != null">
       and  create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
  </select>
  <select id="getNumberList" resultType="java.lang.Integer">
    SELECT number FROM odin_buying_record GROUP BY number ORDER BY number DESC LIMIT 0,6
  </select>
  <select id="getRankList" resultType="map">
   SELECT u.referenceid, SUM(ob.amount) amount FROM odin_buying_record ob LEFT JOIN USER u ON u.id=ob.user_id WHERE number IN (${numbers}) GROUP BY ob.user_id ORDER BY amount DESC LIMIT 0,3;
  </select>
  <select id="selectLastRecordByUser" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" /> FROM odin_release_record WHERE user_id = #{userId} ORDER BY id DESC LIMIT 0,1
  </select>
  <select id="getTotalByUser" resultType="java.lang.String">
    SELECT SUM(amount) total FROM odin_release_record WHERE user_id = #{userId}
  </select>
</mapper>